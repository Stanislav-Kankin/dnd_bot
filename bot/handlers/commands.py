from aiogram import Router
from aiogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery
from aiogram.filters import Command
from services.character_manager import CharacterManager
from database import get_db

router = Router()


@router.message(Command("start"))
async def start_command(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start."""
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è üñãÔ∏è", callback_data="register")],
        [InlineKeyboardButton(text="–ú–æ–π –ø–µ—Ä—Å–æ–Ω–∞–∂ üßô‚Äç‚ôÇÔ∏è", callback_data="my_character")],
        [InlineKeyboardButton(text="–ë—Ä–æ—Å–∏—Ç—å –∫—É–±–∏–∫ üé≤", callback_data="roll_dice")]
    ])
    await message.answer(
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ D&D –±–æ—Ç–∞!\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=keyboard
    )


@router.callback_query(lambda c: c.data == "register")
async def register_user(callback_query: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏."""
    async for session in get_db():
        user = await CharacterManager.get_user(session, callback_query.from_user.id)
        if not user:
            user = await CharacterManager.create_user(
                session,
                telegram_id=callback_query.from_user.id,
                username=callback_query.from_user.username
            )
            await callback_query.message.answer(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.username} —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω!")
        else:
            await callback_query.message.answer(f"–í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –∫–∞–∫ {user.username}!")


@router.callback_query(lambda c: c.data == "my_character")
async def my_character(callback_query: CallbackQuery):
    """–ü—Ä–æ—Å–º–æ—Ç—Ä –ø–µ—Ä—Å–æ–Ω–∞–∂–∞."""
    async for session in get_db():
        user = await CharacterManager.get_user(session, callback_query.from_user.id)
        if user and user.characters:
            character = user.characters[user.current_character] if user.current_character else user.characters[0]
            await callback_query.message.answer(
                f"–ü–µ—Ä—Å–æ–Ω–∞–∂: {character['name']}\n"
                f"–ö–ª–∞—Å—Å: {character['class']}\n"
                f"–£—Ä–æ–≤–µ–Ω—å: {character['level']}\n"
                f"–ò–Ω–≤–µ–Ω—Ç–∞—Ä—å: {', '.join(character['inventory'])}"
            )
        else:
            await callback_query.message.answer("–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π.")


@router.callback_query(lambda c: c.data == "roll_dice")
async def roll_dice(callback_query: CallbackQuery):
    """–ë—Ä–æ—Å–æ–∫ –∫—É–±–∏–∫–∞."""
    import random
    result = random.randint(1, 20)
    await callback_query.message.answer(f"üé≤ –í—ã –±—Ä–æ—Å–∏–ª–∏ –∫—É–±–∏–∫: {result}")
