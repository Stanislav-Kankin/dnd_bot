from aiogram import Router
from aiogram.types import (
    Message, InlineKeyboardMarkup,
    InlineKeyboardButton, CallbackQuery
    )
from aiogram.filters import Command
from services.character_manager import CharacterManager
from database import get_db

router = Router()


@router.message(Command("start"))
async def start_command(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start."""
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è üñãÔ∏è", callback_data="register")],
        [InlineKeyboardButton(text="–†–µ–∂–∏–º –î–ú–∞ üåç", callback_data="dm_mode")]
    ])
    await message.answer(
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ D&D –±–æ—Ç–∞!\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=keyboard
    )


@router.callback_query(lambda c: c.data == "register")
async def register_user(callback_query: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏."""
    async for session in get_db():
        user = await CharacterManager.get_user(session, callback_query.from_user.id)
        if not user:
            user = await CharacterManager.create_user(
                session,
                telegram_id=callback_query.from_user.id,
                username=callback_query.from_user.username
            )
            await callback_query.message.answer(
                f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.username} —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω!"
                )
        else:
            await callback_query.message.answer(
                f"–í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –∫–∞–∫ {user.username}!"
                )
